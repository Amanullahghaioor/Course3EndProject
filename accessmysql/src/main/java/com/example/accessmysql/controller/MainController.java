package com.example.accessmysql.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.accessmysql.dao.UserRepository;
import com.example.accessmysql.model.User;

@RestController // This means that this class is a Rest Controller
				// which returns data instead of a view

//use RequestMapping at class level not method
@RequestMapping(path = "/demo") // This means URL's start with /demo (after Application path)
								// localhost:8080/demo/<mehtod name>
public class MainController {

	// fields
	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@PostMapping(path = "/add") // Map ONLY POST Requests
	public @ResponseBody String addNewUser(@RequestParam String name, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User n = new User();
		n.setName(name);
		n.setEmail(email);
		userRepository.save(n);
		return "Saved";
	}

	@GetMapping(path = "/all") // localhost:8080/demo/all
	public Iterable<User> getAllUsers() {

		// connect to database
		// write a sql statement
		// get a resulset
		// convert the result from the db table into a java object user
		// send the user list back to client list <user>?

		Iterable<User> allUsersInDB = userRepository.findAll();
		return allUsersInDB;

	}
}
